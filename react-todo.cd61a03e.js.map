{"mappings":"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","sources":["/home/runner/work/carleton-web-dev/carleton-web-dev/node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/classnames/index.js","src/react-todo/components/footer.jsx","src/react-todo/components/todoItem.jsx","src/react-todo/model/todoModel.js","src/react-todo/components/app.jsx","src/react-todo/index.jsx"],"names":["$parcel$interopDefault","a","__esModule","default","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","$dc5118610df5cc910ea040e1de8e$exports","window","Footer","_ref","$ea7b41558fa2f98$$interop$default","count","completedCount","nowShowing","setNowShowing","clearCompleted","activeTodoWord","clearButton","$ea7b41558fa2f98$init","createElement","className","onClick","$dc5118610df5cc910ea040e1de8e$$interop$default","selected","TodoItem","todo","model","_useState2","$e6e126e1be656bad6b37714ea3dc1bc$var$_slicedToArray","useState","isEditing","setIsEditing","_useState4","editTodo","setEditTodo","handleSubmit","val","trim","id","completed","editing","type","checked","onChange","toggle","onDoubleClick","title","removeTodo","value","onBlur","event","target","onKeyDown","preventDefault","currentId","App","$a2c1edcc6151883850ab499788480aaf$var$_slicedToArray","newTodo","setNewTodo","$f65a507e20905cd66c69beeb4e084$var$_slicedToArray","todos","setTodos","addTodo","concat","newTitle","map","$f65a507e20905cd66c69beeb4e084$var$_objectSpread","filter","all","$f65a507e20905cd66c69beeb4e084$var$_toConsumableArray","toggleAll","undefined","$f65a507e20905cd66c69beeb4e084$export$default","shownTodos","activeTodoCount","reduce","accum","placeholder","autoFocus","htmlFor","$e6e126e1be656bad6b37714ea3dc1bc$export$TodoItem","$e1217aa69e3e2aa6d49ec2b3fd8adc$export$Footer","$dab9de5d978d909db2660c4851$$interop$default","render","$a2c1edcc6151883850ab499788480aaf$export$App","document","querySelector"],"version":3,"file":"react-todo.cd61a03e.js.map","sourcesContent":[null,"/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst ALL_TODOS = 'all';\nconst ACTIVE_TODOS = 'active';\nconst COMPLETED_TODOS = 'completed';\n\nexport const Footer = ({ count, completedCount, nowShowing, setNowShowing, clearCompleted }) => {\n  const activeTodoWord = count > 0 ? 'items' : 'item';\n\n  let clearButton = null;\n  if (completedCount > 0) {\n    clearButton = (\n      <button\n        className=\"clear-completed\"\n        onClick={clearCompleted}>\n        Clear completed\n      </button>\n    );\n  }\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{count}</strong> {activeTodoWord} left\n      </span>\n      <ul className=\"filters\">\n        <li>\n          <a\n            onClick={() => setNowShowing(ALL_TODOS)}\n            className={classNames({ selected: nowShowing === ALL_TODOS })}>\n            All\n          </a>\n        </li>\n        {' '}\n        <li>\n          <a\n            onClick={() => setNowShowing(ACTIVE_TODOS)}\n            className={classNames({ selected: nowShowing === ACTIVE_TODOS })}>\n            Active\n          </a>\n        </li>\n        {' '}\n        <li>\n          <a\n            onClick={() => setNowShowing(COMPLETED_TODOS)}\n            className={classNames({ selected: nowShowing === COMPLETED_TODOS })}>\n            Completed\n          </a>\n        </li>\n      </ul>\n      {clearButton}\n    </footer>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const TodoItem = ({ todo, model }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editTodo, setEditTodo] = useState('');\n\n  const handleSubmit = () => {\n    const val = editTodo.trim();\n\n    if (val) {\n      model.editTodo(todo.id, val);\n      setEditTodo('');\n      setIsEditing(false);\n    }\n  };\n\n  const handleChange = event => {\n    setEditTodo(event.target.value);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    event.preventDefault();\n    handleSubmit();\n  };\n\n  return (\n    <li className={classNames({\n      completed: todo.completed,\n      editing: isEditing\n    })}>\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={todo.completed}\n          onChange={() => model.toggle(todo.id)}\n        />\n        <label onDoubleClick={() => setIsEditing(true)}>\n          {todo.title}\n        </label>\n        <button className=\"destroy\" onClick={() => model.removeTodo(todo.id)} />\n      </div>\n      <input\n        className=\"edit\"\n        value={editTodo}\n        onBlur={handleSubmit}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </li>\n  );\n};\n","import { useState } from 'react';\n\nlet currentId = 0;\n\nexport default () => {\n  const [todos, setTodos] = useState([]);\n\n  return {\n    addTodo(title) {\n      currentId++;\n\n      setTodos([].concat(todos, { id: currentId, title, completed: false }));\n    },\n\n    editTodo(id, newTitle) {\n      setTodos(todos.map(todo => todo.id === id ? { ...todo, title: newTitle } : todo));\n    },\n\n    removeTodo(id) {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n\n    all() {\n      return [...todos];\n    },\n\n    toggleAll(checked = true) {\n      setTodos(todos.map(todo => ({ ...todo, completed: checked })));\n    },\n\n    toggle(id) {\n      setTodos(todos.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo));\n    },\n  };\n};\n","import React, { useState } from 'react';\n\nimport { Footer } from './footer';\nimport { TodoItem } from './todoItem';\nimport useTodoModel from '../model/todoModel';\n\nconst ALL_TODOS = 'all';\nconst ACTIVE_TODOS = 'active';\nconst COMPLETED_TODOS = 'completed';\n\nexport const App = () => {\n  const [nowShowing, setNowShowing] = useState(ALL_TODOS);\n  const [newTodo, setNewTodo] = useState('');\n  const model = useTodoModel();\n\n  const handleChange = event => {\n    setNewTodo(event.target.value);\n  };\n\n  const handleNewTodoKeyDown = event => {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    event.preventDefault();\n\n    const val = newTodo.trim();\n\n    if (val) {\n      model.addTodo(val);\n      setNewTodo('');\n    }\n  };\n\n  const todos = model.all();\n  const shownTodos = todos.filter(todo => {\n    switch (nowShowing) {\n      case ACTIVE_TODOS:\n        return !todo.completed;\n      case COMPLETED_TODOS:\n        return todo.completed;\n      default:\n        return true;\n    }\n  });\n\n  const activeTodoCount = todos.reduce((accum, todo) => todo.completed ? accum : accum + 1, 0);\n\n  const completedCount = todos.length - activeTodoCount;\n\n  return (\n    <div>\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={newTodo}\n          onKeyDown={handleNewTodoKeyDown}\n          onChange={handleChange}\n          autoFocus={true}\n        />\n      </header>\n      {todos.length ? (\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onChange={model.toggleAll}\n            checked={activeTodoCount === 0}\n          />\n          <label\n            htmlFor=\"toggle-all\"\n          />\n          <ul className=\"todo-list\">\n            {shownTodos.map(todo => <TodoItem key={todo.id} todo={todo} model={model} />)}\n          </ul>\n        </section>\n      ) : null}\n      {(activeTodoCount || completedCount) ? (\n        <Footer\n          count={activeTodoCount}\n          completedCount={completedCount}\n          nowShowing={nowShowing}\n          setNowShowing={setNowShowing}\n          clearCompleted={() => model.toggleAll(false)}\n        />\n      ) : null}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/app';\n\nReactDOM.render(\n  <App />,\n  document.querySelector('.todoapp')\n);\n"]}