(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{67:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return s})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return u}));var o=r(2),n=r(6),a=(r(0),r(75)),i=r(77),l={title:"Benchmarks: Overview"},s={unversionedId:"benchmarks/overview",id:"benchmarks/overview",isDocsHomePage:!1,title:"Benchmarks: Overview",description:"As part of the development of the diffing algorithm for VirtualDOM, I ran some benchmarks and prepared different",source:"@site/docs/benchmarks/overview.mdx",permalink:"/carleton-web-dev/project/docs/benchmarks/overview",sidebar:"docs",previous:{title:"Context: React-like Hooks API",permalink:"/carleton-web-dev/project/docs/context/react-hooks"},next:{title:"Benchmarks: Performance report",permalink:"/carleton-web-dev/project/docs/benchmarks/benchmark-report"}},c=[{value:"How were the benchmarks run?",id:"how-were-the-benchmarks-run",children:[]},{value:"How to read the benchmarks",id:"how-to-read-the-benchmarks",children:[{value:"Duration table",id:"duration-table",children:[]},{value:"Startup table",id:"startup-table",children:[]},{value:"Memory table",id:"memory-table",children:[]}]}],b={rightToc:c};function u(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"As part of the development of the diffing algorithm for VirtualDOM, I ran some benchmarks and prepared different\nvariations of the same algorithm. Before we go over the results, the algorithms, and ideas on how to improve their\nperformance, let's review how the benchmarks work."),Object(a.b)("p",null,"You may find the up to date benchmarks on this page: ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://minivera.github.io/carleton-web-dev/project/benchmark-data/table.html"}),"benchmarks"),"."),Object(a.b)("h2",{id:"how-were-the-benchmarks-run"},"How were the benchmarks run?"),Object(a.b)("p",null,"The benchmarks were run with the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://github.com/krausest/js-framework-benchmark"}),"js-framework-benchmark tool"),".\nThis tool records the performance of various frameworks using a selenium browser. The browser executes the required\ncommands, the tool calculates if the benchmark ran successfully and then calculate the memory weight or duration of the\ntest."),Object(a.b)("p",null,"Usually, these benchmarks are executed using the 40+ frameworks available in the tool, but for the purposes of this\nexperiment and time, I only ran five benchmarks. Three of those benchmarks are the three variations on the diffing\nalgorithm for the framework and the two other are the base cases. The first base case is the framework executions using\nvanilla JavaScript functions. This execution is intended to give an idea of the default performance from the browser,\nwithout any framework. You would usually experiment this kind of performance when executing the exact JavaScript\nfunctions on the DOM to crete the results you are looking for."),Object(a.b)("p",null,"Most frameworks, however, use more complex system to give the ability to the developer to program possible variations\nwithout having to plan for any of them. In the case of React, vue, VirtualDOM, or many other frameworks, we use the\nvirtual DOM pattern to process mutations on the DOM based on what a component creates."),Object(a.b)("p",null,"This leads us to the second base case. To be able to compare this framework with official frameworks, I ran the same\nbenchmarks with React without keys. Since our framework doesn't use keys, not assigning any keys when creating elements\nin a loop in React will give us similar performance to what we'd expect with our framework."),Object(a.b)("h2",{id:"how-to-read-the-benchmarks"},"How to read the benchmarks"),Object(a.b)("p",null,"The benchmarks are divided into three tables. Each table can be sorted by clicking on one of the links of the left\nside of the table. The head of the table will name each execution, letting you know which framework the numbers\nof that column are for."),Object(a.b)("h3",{id:"duration-table"},"Duration table"),Object(a.b)("div",null,Object(a.b)("div",{style:{shapeOutside:"margin-box",float:"left",marginRight:-225}},Object(a.b)("img",{alt:"Duration table",src:Object(i.a)("img/duration.png")})),Object(a.b)("p",{style:{paddingTop:30}},"The duration table shows the time take to execute specific operations. For each of the operations, the benchmarking tool executes specific commands on the page 10 times. After having ran the 10 operations, it takes the mean time of execution for each of these 10 runs in milliseconds and that's the information added in the table. For all the recorded times, the smaller the number the better. The rows are then colored in order from green to red to show which framework fares better over the others."),Object(a.b)("ul",null,Object(a.b)("li",null,Object(a.b)("b",null,"create rows"),": Duration for creating 1,000 rows after the page loaded (no warmup)."),Object(a.b)("li",null,Object(a.b)("b",null,"replace all rows"),": Duration for replacing all 1,000 rows of the table (with 5 warmup iterations)."),Object(a.b)("li",null,Object(a.b)("b",null,"partial update"),": Time to update the text of every 10th row for a table with 10,000 rows (with 5 warmup iterations)."),Object(a.b)("li",null,Object(a.b)("b",null,"select row"),": Duration to highlight a row in response to a click on the row. (with 5 warmup iterations)."),Object(a.b)("li",null,Object(a.b)("b",null,"swap rows"),": Time to swap 2 rows on a table with 1,000 rows. (with 5 warmup iterations)."),Object(a.b)("li",null,Object(a.b)("b",null,"remove row"),": Duration to remove a row for a table with 1,000 rows. (with 5 warmup iterations)."),Object(a.b)("li",null,Object(a.b)("b",null,"create many rows"),": Duration to create 10,000 rows (no warmup)."),Object(a.b)("li",null,Object(a.b)("b",null,"append rows to large table"),": Duration for adding 1,000 rows on a table of 10,000 rows (no warmup)."),Object(a.b)("li",null,Object(a.b)("b",null,"clear rows"),": Duration to clear the table filled with 10,000 rows. (no warmup)."))),Object(a.b)("h3",{id:"startup-table"},"Startup table"),Object(a.b)("div",null,Object(a.b)("div",{style:{shapeOutside:"margin-box",float:"left",marginRight:20}},Object(a.b)("img",{alt:"Duration table",src:Object(i.a)("img/startup.png")})),Object(a.b)("p",{style:{paddingTop:30}},"The startup table shows information on the time to interactive for the library. The weight and JavaScript complexity of a framework impact those metrics. The larger a framework is, the longer it takes for that script to be loaded on the network and parser by the browser. The benchmarks use lighthouse to calculate those metrics."),Object(a.b)("ul",null,Object(a.b)("li",null,Object(a.b)("b",null,"consistently interactive"),": The lighthouse metric TimeToConsistentlyInteractive: A pessimistic TTI - when the CPU and network are both definitely very idle. (no more CPU tasks over 50ms)."),Object(a.b)("li",null,Object(a.b)("b",null,"script bootup time"),": The lighthouse metric ScriptBootUpTtime: The total ms required to parse/compile/evaluate all the page's scripts."),Object(a.b)("li",null,Object(a.b)("b",null,"main thread work cost"),": The lighthouse metric MainThreadWorkCost: Total amount of time spent doing work on the main thread. includes style/layout/etc."),Object(a.b)("li",null,Object(a.b)("b",null,"total byte weight"),": The lighthouse metric TotalByteWeight: Network transfer cost (post-compression) of all the resources loaded into the page."))),Object(a.b)("h3",{id:"memory-table"},"Memory table"),Object(a.b)("div",null,Object(a.b)("div",{style:{shapeOutside:"margin-box",float:"left",marginRight:20}},Object(a.b)("img",{alt:"Duration table",src:Object(i.a)("img/memory.png")})),Object(a.b)("p",{style:{paddingTop:30}},"The memory table shows the memory usage for the library. Library using more memory can slow down slower systems and may show memory problems in the system (Like uncleaned nodes that still have some dangling reference). The virtual DOM uses a good amount of memory by design - since the whole idea of the virtual DOM is to keep a copy of the DOM tree in memory - and so it is important to make sure frameworks do not consume an unreasonable amount of memory and slow down mobile devices or slow systems."),Object(a.b)("ul",null,Object(a.b)("li",null,Object(a.b)("b",null,"ready memory"),": Memory usage after page load."),Object(a.b)("li",null,Object(a.b)("b",null,"run memory"),": Memory usage after adding 1,000 rows."),Object(a.b)("li",null,Object(a.b)("b",null,"update memory"),": Memory usage after clicking 5 times update for a table with 1,000 rows."),Object(a.b)("li",null,Object(a.b)("b",null,"replace memory"),": Memory usage after clicking 5 times create 1,000 rows."),Object(a.b)("li",null,Object(a.b)("b",null,"repeated clear memory"),": Memory usage after creating and clearing 1,000 rows for 5 times."),Object(a.b)("li",null,Object(a.b)("b",null,"update memory"),": Memory usage after clicking 5 times update for a table with 1,000 rows."),Object(a.b)("li",null,Object(a.b)("b",null,"startup time"),": Duration for loading and parsing the javascript code and rendering the page."))))}u.isMDXComponent=!0},75:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var o=r(0),n=r.n(o);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=n.a.createContext({}),b=function(e){var t=n.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=b(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=b(r),m=o,d=u["".concat(i,".").concat(m)]||u[m]||h[m]||a;return r?n.a.createElement(d,l(l({ref:t},c),{},{components:r})):n.a.createElement(d,l({ref:t},c))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=r[c];return n.a.createElement.apply(null,i)}return n.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},76:function(e,t,r){"use strict";var o=r(0),n=r(21);t.a=function(){var e=Object(o.useContext)(n.a);if(null===e)throw new Error("Docusaurus context not provided");return e}},77:function(e,t,r){"use strict";r.d(t,"b",(function(){return a})),r.d(t,"a",(function(){return i}));var o=r(76),n=r(80);function a(){var e=Object(o.a)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,r=void 0===t?"/":t,a=e.url;return{withBaseUrl:function(e,t){return function(e,t,r,o){var a=void 0===o?{}:o,i=a.forcePrependBaseUrl,l=void 0!==i&&i,s=a.absolute,c=void 0!==s&&s;if(!r)return r;if(r.startsWith("#"))return r;if(Object(n.b)(r))return r;if(l)return t+r;var b=!r.startsWith(t)?t+r.replace(/^\//,""):r;return c?e+b:b}(a,r,e,t)}}}function i(e,t){return void 0===t&&(t={}),(0,a().withBaseUrl)(e,t)}},80:function(e,t,r){"use strict";function o(e){return!0===/^(\w*:|\/\/)/.test(e)}function n(e){return void 0!==e&&!o(e)}r.d(t,"b",(function(){return o})),r.d(t,"a",(function(){return n}))}}]);