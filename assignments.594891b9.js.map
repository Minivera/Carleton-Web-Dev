{"mappings":"oEAAIA,EAAkB,GAClBC,EAAkB,GAElBC,EACoB,oBAAfC,WACHA,WACgB,oBAATC,KACPA,KACkB,oBAAXC,OACPA,OACkB,oBAAXC,OACPA,OACA,4sCAE4B,MAA9BJ,EAAaK,gBACfL,EAAaK,cAAgB,SAASC,GAOpC,GALIA,KAAQP,IACVA,EAAgBO,YACTP,EAAgBO,IAGrBA,KAAQR,EACV,OAAOA,EAAgBQ,GAKzB,GAAsB,oBAAXC,QAAoD,mBAAnBA,OAAOC,QACjD,OAAOD,OAAOC,QAAQF,GAGxB,IAAIG,EAAM,IAAIC,MAAM,uBAAyBJ,EAAO,KAEpD,MADAG,EAAIE,KAAO,mBACLF,GAGRT,EAAaK,cAAcO,SAAW,SAAkBC,EAAIC,GAC1DhB,EAAgBe,GAAMC,GAGxBd,EAAaK,cAAcU,eAAiB,SAAwBF,EAAIG,GACtEjB,EAAgBc,GAAMG,EACtBlB,EAAgBe,GAAM,SCzCpBI,oPAAmBd,OAAOe,iCAC9B,SAAAD,IAAc,IAAAE,EAAA,mGAAAC,CAAAC,KAAAJ,IACZE,EAAAG,EAAAC,KAAAF,OAEKG,qBAAuB,qBAE5BL,EAAKM,YAAc,KACnBN,EAAKO,SANOP,yDAsBZ,MAAO,CAAC,kEAZJE,KAAKM,cACPN,KAAKI,YAAcG,IAAAC,gBAAgBC,UAAUT,KAAKK,OAAOK,KAAKV,uDAK5DA,KAAKI,aACPJ,KAAKI,+DAQgBnB,EAAM0B,EAAUC,GAC1B,kBAAT3B,GAA4B0B,IAAaC,GAC3CZ,KAAKK,0CAKP,GAAKE,IAAAC,gBAAgBK,MAArB,CAIAb,KAAKc,UAAUC,IAAI,SACnBf,KAAKc,UAAUC,IAAI,cAEnB,IAAIC,EAAe,KACbC,EAAQ,IAAInC,OAAOoC,IAAIpC,OAAOqC,SAASC,YAC7C,GAAIpB,KAAKqB,aAAa,iBACpBL,EAAehB,KAAKsB,aAAa,qBAC5B,CAAA,IAAIL,EAAMM,aAAaC,IAAI,cAGhC,OAFAR,EAAeC,EAAMM,aAAaE,IAAI,cAKxC,IAAMC,EAAanB,IAAAC,gBAAgBmB,cAAcX,GACjD,GAAKU,EAAL,CAIA,IACME,EADqBC,SAASC,cAAc9B,KAAKG,sBAAsB4B,QACnCC,WAAU,GAE9CC,EAAQL,EAAeE,cAAc,+BAC3CG,EAAMC,KAAN,uDAAAC,OAAoET,EAAWU,OAC/EH,EAAMI,UAAYX,EAAWzC,KAE7B,IAAMqD,EAAatC,KAAKsB,aAAa,eAChBM,EAAeE,cAAc,kCACrCS,QAAU,WACrBhC,IAAAC,gBAAgBgC,iBAAiBd,GAC7BY,IACFxD,OAAOqC,SAASe,KAAOI,IAI3B,IAAMG,EAAmBb,EAAeE,cAAc,0BAA0BC,QAChF,GAAIL,EAAWgB,SAAU,CACvB,IAAMC,EAAOF,EAAiBT,WAAU,GACtBW,EAAKb,cAAc,OAC3Bc,YAAYf,SAASgB,eAAenB,EAAWgB,SAAST,QAClEL,EAAegB,YAAYD,GAG7B,IAAMG,EAAoBlB,EAAeE,cAAc,2BAA2BC,QAC9EL,EAAWqB,WACbrB,EAAWqB,UAAUC,SAAQ,SAAAC,GAC3B,IAAMN,EAAOG,EAAkBd,WAAU,GACvBW,EAAKb,cAAc,OAC3Bc,YAAYf,SAASgB,eAAeI,EAAShB,QACvDL,EAAegB,YAAYD,MAI/B3C,KAAKkD,UAAY,GACjBlD,KAAK4C,YAAYhB,0CAIrB9C,OAAOqE,eAAeC,OAAO,oBAAqBxD,EAAY,CAAEyD,QAAS","sources":["/home/runner/work/carleton-web-dev/carleton-web-dev/node_modules/@parcel/scope-hoisting/lib/prelude.js","src/wc-course-website/components/assignment/index.js"],"names":["$parcel$modules","$parcel$bundles","globalObject","globalThis","self","window","global","parcelRequire","name","module","require","err","Error","code","register","id","exports","registerBundle","fn","Assignment","HTMLDivElement","_this","$bdfa298c7645d53f818059b1880c5b4$var$_classCallCheck","this","_super","call","assignmentTemplateId","unsuscriber","render","isConnected","$b2736226bbcf175e104b7e710aa92180$init","databaseManager","subscribe","bind","oldValue","newValue","ready","classList","add","assignmentId","query","URL","location","toString","hasAttribute","getAttribute","searchParams","has","get","assignment","getAssignment","assignmentNode","document","querySelector","content","cloneNode","title","href","concat","$loki","innerText","deletePath","onclick","deleteAssignment","specfileTemplate","specfile","node","appendChild","createTextNode","resourcesTemplate","resources","forEach","resource","innerHTML","customElements","define","extends"],"version":3,"file":"assignments.594891b9.js.map","sourcesContent":[null,"import { databaseManager } from '../../database';\n\nclass Assignment extends window.HTMLDivElement {\n  constructor() {\n    super();\n\n    this.assignmentTemplateId = '#single-assignment';\n\n    this.unsuscriber = null;\n    this.render();\n  }\n\n  connectedCallback() {\n    if (this.isConnected) {\n      this.unsuscriber = databaseManager.subscribe(this.render.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsuscriber) {\n      this.unsuscriber();\n    }\n  }\n\n  static get observedAttributes() {\n    return ['assignment-id'];\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name === 'assignment-id' && oldValue !== newValue) {\n      this.render();\n    }\n  }\n\n  render() {\n    if (!databaseManager.ready) {\n      return;\n    }\n\n    this.classList.add('panel');\n    this.classList.add('is-success');\n\n    let assignmentId = null;\n    const query = new window.URL(window.location.toString());\n    if (this.hasAttribute('assignment-id')) {\n      assignmentId = this.getAttribute('assignment-id');\n    } else if (query.searchParams.has('assignment')) {\n      assignmentId = query.searchParams.get('assignment');\n    } else {\n      return;\n    }\n\n    const assignment = databaseManager.getAssignment(assignmentId);\n    if (!assignment) {\n      return;\n    }\n\n    const assignmentTemplate = document.querySelector(this.assignmentTemplateId).content;\n    const assignmentNode = assignmentTemplate.cloneNode(true);\n\n    const title = assignmentNode.querySelector('[data-element=\"title-link\"]');\n    title.href = `/wc-course-website/assignment/index.html?assignment=${assignment.$loki}`;\n    title.innerText = assignment.name;\n\n    const deletePath = this.getAttribute('delete-path');\n    const deleteButton = assignmentNode.querySelector('[data-element=\"delete-button\"]');\n    deleteButton.onclick = () => {\n      databaseManager.deleteAssignment(assignment);\n      if (deletePath) {\n        window.location.href = deletePath;\n      }\n    };\n\n    const specfileTemplate = assignmentNode.querySelector('[data-list=\"specfile\"]').content;\n    if (assignment.specfile) {\n      const node = specfileTemplate.cloneNode(true);\n      const container = node.querySelector('div');\n      container.appendChild(document.createTextNode(assignment.specfile.title));\n      assignmentNode.appendChild(node);\n    }\n\n    const resourcesTemplate = assignmentNode.querySelector('[data-list=\"resources\"]').content;\n    if (assignment.resources) {\n      assignment.resources.forEach(resource => {\n        const node = resourcesTemplate.cloneNode(true);\n        const container = node.querySelector('div');\n        container.appendChild(document.createTextNode(resource.title));\n        assignmentNode.appendChild(node);\n      });\n    }\n\n    this.innerHTML = '';\n    this.appendChild(assignmentNode);\n  }\n}\n\nwindow.customElements.define('single-assignment', Assignment, { extends: 'div' });\n"]}