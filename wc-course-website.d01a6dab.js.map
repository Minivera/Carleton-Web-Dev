{"mappings":"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","sources":["/home/runner/work/carleton-web-dev/carleton-web-dev/node_modules/@parcel/scope-hoisting/lib/prelude.js","src/wc-course-website/components/contentCount.js","src/wc-course-website/components/collapsibleContent/index.js","src/wc-course-website/components/lectures/index.js","src/wc-course-website/components/tutorials/index.js","src/wc-course-website/components/assignments/index.js","src/wc-course-website/components/forums/index.js"],"names":["$parcel$modules","$parcel$bundles","globalObject","globalThis","self","window","global","parcelRequire","name","module","require","err","Error","code","register","id","exports","registerBundle","fn","ContentCount","HTMLElement","_this","$de806f302a8b88b5ccac33a768f84074$var$_classCallCheck","this","_super","call","unsuscriber","render","isConnected","$b2736226bbcf175e104b7e710aa92180$init","databaseManager","subscribe","bind","ready","node","attr","getAttribute","document","createTextNode","getLectures","length","getTutorials","getAssignments","getForums","reduce","accumulator","forum","topics","concat","innerHTML","appendChild","customElements","define","CollapsibleContent","$f14d863edacf08883710da00a67d8c5$var$_classCallCheck","contentTemplateId","opened","update","innerNode","shadowRoot","querySelector","chevronTemplate","content","style","transition","chevronNode","cloneNode","setAttribute","button","replaceChild","_this2","contentNode","onclick","toggle","attachShadow","mode","querySelectorAll","forEach","link","$cc88967be97a9f9f4b82b626210467f$init","dom","watch","autoReplaceSvgRoot","observeMutationsRoot","Lectures","$bd881d7cc09a0c9d7c12c0efa63f$var$_classCallCheck","lecturesTemplateId","lectures","lecturesNode","container","lecture","createElement","is","$loki","Tutorials","$f716a2fafe07f65bc66cc8fc14c8d1b0$var$_classCallCheck","tutorialsTemplateId","tutorials","tutorialsNode","tutorial","Assignments","$ea352e5af87aa16c2cc292de61e1$var$_classCallCheck","assignmentsTemplateId","assignments","assignmentsNode","assignment","Forums","$aa181f2dc939b4e7e5cbfdf0a8dd64a6$var$_classCallCheck","forumsTemplateId","forums","forumsNode","singleForumTemplate","title","href","innerText"],"version":3,"file":"wc-course-website.d01a6dab.js.map","sourcesContent":[null,"import { databaseManager } from '../database';\n\nclass ContentCount extends window.HTMLElement {\n  constructor() {\n    super();\n\n    this.unsuscriber = null;\n    this.render();\n  }\n\n  connectedCallback() {\n    if (this.isConnected) {\n      this.unsuscriber = databaseManager.subscribe(this.render.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsuscriber) {\n      this.unsuscriber();\n    }\n  }\n\n  render() {\n    if (!databaseManager.ready) {\n      return;\n    }\n\n    let node = null;\n    const attr = this.getAttribute('source');\n    switch (attr) {\n      case 'lectures': {\n        node = document.createTextNode(databaseManager.getLectures().length);\n        break;\n      }\n      case 'tutorials': {\n        node = document.createTextNode(databaseManager.getTutorials().length);\n        break;\n      }\n      case 'assignments': {\n        node = document.createTextNode(databaseManager.getAssignments().length);\n        break;\n      }\n      case 'forums': {\n        node = document.createTextNode(\n          databaseManager.getForums().reduce((accumulator, forum) => accumulator + forum.topics.length, 0)\n        );\n        break;\n      }\n      default:\n        throw new Error(`Unknown course content type ${attr}`);\n    }\n\n    this.innerHTML = '';\n    this.appendChild(node);\n  }\n}\n\nwindow.customElements.define('content-count', ContentCount);\n","import { dom } from '@fortawesome/fontawesome-svg-core';\n\nclass CollapsibleContent extends window.HTMLElement {\n  constructor() {\n    super();\n\n    this.contentTemplateId = '#collapsible-content';\n\n    this.opened = true;\n    this.render();\n  }\n\n  toggle() {\n    this.opened = !this.opened;\n    this.update();\n  }\n\n  /**\n   * Updates the content of the collapsible content without deleting the entire HTML.\n   */\n  update() {\n    const innerNode = this.shadowRoot.querySelector('[data-element=\"inner\"]');\n\n    let chevronTemplate = null;\n    if (this.opened) {\n      chevronTemplate = this.shadowRoot.querySelector('[data-element=\"opened\"]').content;\n      innerNode.style.transition = 'max-height 1s ease-in-out';\n      innerNode.style['max-height'] = '9000px';\n      innerNode.style['padding-bottom'] = '20px';\n    } else {\n      chevronTemplate = this.shadowRoot.querySelector('[data-element=\"closed\"]').content;\n      innerNode.style.transition = 'max-height 0.5s cubic-bezier(0, 1, 0, 1)';\n      innerNode.style['max-height'] = '0';\n      innerNode.style['padding-bottom'] = '0';\n    }\n\n    const chevronNode = chevronTemplate.cloneNode(true);\n    chevronNode.querySelector('i').setAttribute('data-element', 'chevron');\n\n    const button = this.shadowRoot.querySelector('[data-element=\"icon-button\"]');\n    if (button.querySelector('[data-element=\"chevron\"]')) {\n      button.replaceChild(chevronNode, button.querySelector('[data-element=\"chevron\"]'));\n    } else {\n      button.appendChild(chevronNode);\n    }\n  }\n\n  /**\n   * Renders the collapsible content and it's template inside of the DOM structure. Will delete all the HTML that\n   * existed in this node beforehand.\n   */\n  render() {\n    const contentTemplate = document.querySelector(this.contentTemplateId).content;\n    const contentNode = contentTemplate.cloneNode(true);\n    const innerNode = contentNode.querySelector('[data-element=\"inner\"]');\n\n    const chevronTemplate = contentNode.querySelector('[data-element=\"opened\"]').content;\n    innerNode.style.transition = 'max-height 1s ease-in-out';\n    innerNode.style['max-height'] = '9000px';\n    innerNode.style['padding-bottom'] = '20px';\n\n    const chevronNode = chevronTemplate.cloneNode(true);\n    chevronNode.querySelector('i').setAttribute('data-element', 'chevron');\n\n    const button = contentNode.querySelector('[data-element=\"icon-button\"]');\n    button.appendChild(chevronNode);\n    button.onclick = this.toggle.bind(this);\n\n    this.attachShadow({ mode: 'open' });\n\n    this.shadowRoot.innerHTML = '';\n    // Add styles defined in the head\n    document.querySelectorAll('head style').forEach(style => {\n      this.shadowRoot.appendChild(style.cloneNode(true));\n    });\n    document.querySelectorAll('head link').forEach(link => {\n      this.shadowRoot.appendChild(link.cloneNode(true));\n    });\n\n    dom.watch({\n      autoReplaceSvgRoot: this.shadowRoot,\n      observeMutationsRoot: this.shadowRoot\n    });\n\n    // Add the content from the templates\n    this.shadowRoot.appendChild(contentNode);\n  }\n}\n\nwindow.customElements.define('collapsible-content', CollapsibleContent);\n","import { databaseManager } from '../../database';\n\nclass Lectures extends window.HTMLElement {\n  constructor() {\n    super();\n\n    this.lecturesTemplateId = '#lectures-list';\n\n    this.unsuscriber = null;\n    this.render();\n  }\n\n  connectedCallback() {\n    if (this.isConnected) {\n      this.unsuscriber = databaseManager.subscribe(this.render.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsuscriber) {\n      this.unsuscriber();\n    }\n  }\n\n  render() {\n    if (!databaseManager.ready) {\n      return;\n    }\n\n    const lectures = databaseManager.getLectures();\n\n    const lecturesTemplate = document.querySelector(this.lecturesTemplateId).content;\n    const lecturesNode = lecturesTemplate.cloneNode(true);\n    const container = lecturesNode.querySelector('[data-element=\"lectures\"]');\n\n    lectures.forEach(lecture => {\n      const node = document.createElement('div', { is: 'single-lecture' });\n      node.setAttribute('lecture-id', lecture.$loki);\n      container.appendChild(node);\n    });\n\n    this.innerHTML = '';\n    this.appendChild(lecturesNode);\n  }\n}\n\nwindow.customElements.define('lectures-list', Lectures);\n","import { databaseManager } from '../../database';\n\nclass Tutorials extends window.HTMLElement {\n  constructor() {\n    super();\n\n    this.tutorialsTemplateId = '#tutorials-list';\n\n    this.unsuscriber = null;\n    this.render();\n  }\n\n  connectedCallback() {\n    if (this.isConnected) {\n      this.unsuscriber = databaseManager.subscribe(this.render.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsuscriber) {\n      this.unsuscriber();\n    }\n  }\n\n  render() {\n    if (!databaseManager.ready) {\n      return;\n    }\n\n    const tutorials = databaseManager.getTutorials();\n\n    const tutorialsTemplate = document.querySelector(this.tutorialsTemplateId).content;\n    const tutorialsNode = tutorialsTemplate.cloneNode(true);\n    const container = tutorialsNode.querySelector('[data-element=\"tutorials\"]');\n\n    tutorials.forEach(tutorial => {\n      const node = document.createElement('div', { is: 'single-tutorial' });\n      node.setAttribute('tutorial-id', tutorial.$loki);\n      container.appendChild(node);\n    });\n\n    this.innerHTML = '';\n    this.appendChild(tutorialsNode);\n  }\n}\n\nwindow.customElements.define('tutorials-list', Tutorials);\n","import { databaseManager } from '../../database';\n\nclass Assignments extends window.HTMLElement {\n  constructor() {\n    super();\n\n    this.assignmentsTemplateId = '#assignments-list';\n\n    this.unsuscriber = null;\n    this.render();\n  }\n\n  connectedCallback() {\n    if (this.isConnected) {\n      this.unsuscriber = databaseManager.subscribe(this.render.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsuscriber) {\n      this.unsuscriber();\n    }\n  }\n\n  render() {\n    if (!databaseManager.ready) {\n      return;\n    }\n\n    const assignments = databaseManager.getAssignments();\n\n    const assignmentsTemplate = document.querySelector(this.assignmentsTemplateId).content;\n    const assignmentsNode = assignmentsTemplate.cloneNode(true);\n    const container = assignmentsNode.querySelector('[data-element=\"assignments\"]');\n\n    assignments.forEach(assignment => {\n      const node = document.createElement('div', { is: 'single-assignment' });\n      node.setAttribute('assignment-id', assignment.$loki);\n      container.appendChild(node);\n    });\n\n    this.innerHTML = '';\n    this.appendChild(assignmentsNode);\n  }\n}\n\nwindow.customElements.define('assignments-list', Assignments);\n","import { databaseManager } from '../../database';\n\nclass Forums extends window.HTMLElement {\n  constructor() {\n    super();\n\n    this.forumsTemplateId = '#forums-list';\n\n    this.unsuscriber = null;\n    this.render();\n  }\n\n  connectedCallback() {\n    if (this.isConnected) {\n      this.unsuscriber = databaseManager.subscribe(this.render.bind(this));\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.unsuscriber) {\n      this.unsuscriber();\n    }\n  }\n\n  render() {\n    if (!databaseManager.ready) {\n      return;\n    }\n\n    const forums = databaseManager.getForums();\n\n    const forumsTemplate = document.querySelector(this.forumsTemplateId).content;\n    const forumsNode = forumsTemplate.cloneNode(true);\n    const container = forumsNode.querySelector('[data-element=\"forums\"]');\n    const singleForumTemplate = forumsNode.querySelector('[data-element=\"single-forum\"]').content;\n\n    forums.forEach(forum => {\n      const node = singleForumTemplate.cloneNode(true);\n      const title = node.querySelector('[data-element=\"title\"]');\n      title.href = `/wc-course-website/forum/index.html?forum=${forum.$loki}`;\n      title.innerText = `${forum.title} - ${forum.topics.length} topics`;\n      container.appendChild(node);\n    });\n\n    this.innerHTML = '';\n    this.appendChild(forumsNode);\n  }\n}\n\nwindow.customElements.define('forums-list', Forums);\n"]}