{"mappings":"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","sources":["/home/runner/work/carleton-web-dev/carleton-web-dev/node_modules/@parcel/scope-hoisting/lib/prelude.js","src/wc-course-website/utilities/createUrl.js","src/wc-course-website/components/navbar/index.js","src/wc-course-website/components/base/collapsible.js","src/wc-course-website/components/collapsibleMenu/index.js","src/wc-course-website/components/activities/index.js"],"names":["$parcel$modules","$parcel$bundles","globalObject","globalThis","self","window","global","parcelRequire","name","module","require","err","Error","code","register","id","exports","registerBundle","fn","createUrl","type","_len","arguments","length","rest","Array","_key","lectureId","concat","tutorialId","assignmentId","forumId","topicId","NavBar","_this","$db0de5e82fcbe597f5699aba562f8$var$_classCallCheck","this","_super","call","navbarTemplateId","navbarItemTemplateId","navbarAddTemplateId","navbarDividerTemplateId","unsuscriber","render","lectures","$b2736226bbcf175e104b7e710aa92180$init","databaseManager","getLectures","tutorials","getTutorials","assignments","getAssignments","forums","getForums","navbarTemplate","document","querySelector","content","navbarItemTemplate","navbarAddTemplate","navbarDividerTemplate","templateNode","cloneNode","lecturesNode","forEach","lecture","node","anchor","href","$efb332d8ccb9a6b3f962ac63aa3525c$export$createUrl","$loki","innerText","unit","appendChild","addLecture","addLectureAnchor","assignmentsNode","assignment","addAssignment","addAssignmentAnchor","tutorialsNode","tutorial","addTutorial","addTutorialAnchor","forumsNode","forum","title","innerHTML","$dc4bd82eadd83b135ac82ece8b7911c$init","DatabaseConsumer","HTMLElement","customElements","define","Collapsible","templateId","defaultValue","undefined","$c5ad12a663512f74d6fb92f3c27c692$var$_classCallCheck","contentTemplateId","opened","update","innerNode","style","display","transition","contentNode","onclick","toggle","bind","CollapsibleMenu","$b2091569c36609f24c4a358c897dd27$var$_classCallCheck","$b2091569c36609f24c4a358c897dd27$var$_get","$b2091569c36609f24c4a358c897dd27$var$_getPrototypeOf","prototype","getAttribute","Activities","$a583bbc512a0647c859a79b6918$var$_classCallCheck","activitiesTemplateId","activitiesNode","lectureTemplate","tutorialTemplate","assignmentTemplate","forumsTemplate","topics"],"version":3,"file":"forums.3972cee9.js.map","sourcesContent":[null,"export const createUrl = (type, ...rest) => {\n  switch (type) {\n    case 'home': {\n      return '/wc-course-website/index.html';\n    }\n    case 'lectures': {\n      return '/wc-course-website/pages/lectures/index.html';\n    }\n    case 'lecture': {\n      const [lectureId] = rest;\n      return `/wc-course-website/pages/lecture/index.html?lecture=${lectureId}`;\n    }\n    case 'tutorials': {\n      return '/wc-course-website/pages/tutorials/index.html';\n    }\n    case 'tutorial': {\n      const [tutorialId] = rest;\n      return `/wc-course-website/pages/tutorial/index.html?tutorial=${tutorialId}`;\n    }\n    case 'assignments': {\n      return '/wc-course-website/pages/assignments/index.html';\n    }\n    case 'assignment': {\n      const [assignmentId] = rest;\n      return `/wc-course-website/pages/assignment/index.html?assignment=${assignmentId}`;\n    }\n    case 'forums': {\n      return '/wc-course-website/pages/forums/index.html';\n    }\n    case 'forum': {\n      const [forumId] = rest;\n      return `/wc-course-website/pages/forum/index.html?forum=${forumId}`;\n    }\n    case 'topic': {\n      const [forumId, topicId] = rest;\n      return `/wc-course-website/pages/forum/topic/index.html?forum=${forumId}&topic=${topicId}`;\n    }\n    default:\n      throw new Error(`Unknown type ${type} given to the createUrl helper.`);\n  }\n};\n","import { databaseManager } from '../../database';\nimport { DatabaseConsumer } from '../base/databaseConsumer';\nimport { createUrl } from '../../utilities/createUrl';\n\nexport class NavBar extends DatabaseConsumer(window.HTMLElement) {\n  constructor() {\n    super();\n\n    this.navbarTemplateId = '#navbar';\n    this.navbarItemTemplateId = '#navbar-item';\n    this.navbarAddTemplateId = '#navbar-add';\n    this.navbarDividerTemplateId = '#navbar-divider';\n\n    this.unsuscriber = null;\n  }\n\n  notified() {\n    this.render();\n  }\n\n  render() {\n    const lectures = databaseManager.getLectures();\n    const tutorials = databaseManager.getTutorials();\n    const assignments = databaseManager.getAssignments();\n    const forums = databaseManager.getForums();\n\n    const navbarTemplate = document.querySelector(this.navbarTemplateId).content;\n    const navbarItemTemplate = document.querySelector(this.navbarItemTemplateId).content;\n    const navbarAddTemplate = document.querySelector(this.navbarAddTemplateId).content;\n    const navbarDividerTemplate = document.querySelector(this.navbarDividerTemplateId).content;\n\n    const templateNode = navbarTemplate.cloneNode(true);\n\n    const lecturesNode = templateNode.querySelector('[data-list=\"lectures\"]');\n    lectures.forEach(lecture => {\n      const node = navbarItemTemplate.cloneNode(true);\n      const anchor = node.querySelector('a');\n      anchor.href = createUrl('lecture', lecture.$loki);\n      anchor.innerText = lecture.unit;\n      lecturesNode.appendChild(node);\n    });\n\n    lecturesNode.appendChild(navbarDividerTemplate.cloneNode(true));\n\n    const addLecture = navbarAddTemplate.cloneNode(true);\n    const addLectureAnchor = addLecture.querySelector('a');\n    addLectureAnchor.href = `${createUrl('lectures')}?new`;\n    addLectureAnchor.querySelector('.text').innerText = 'Add a new lecture';\n    lecturesNode.appendChild(addLecture);\n\n    const assignmentsNode = templateNode.querySelector('[data-list=\"assignments\"]');\n    assignments.forEach(assignment => {\n      const node = navbarItemTemplate.cloneNode(true);\n      const anchor = node.querySelector('a');\n      anchor.href = createUrl('assignment', assignment.$loki);\n      anchor.innerText = assignment.name;\n      assignmentsNode.appendChild(node);\n    });\n\n    assignmentsNode.appendChild(navbarDividerTemplate.cloneNode(true));\n\n    const addAssignment = navbarAddTemplate.cloneNode(true);\n    const addAssignmentAnchor = addAssignment.querySelector('a');\n    addAssignmentAnchor.href = `${createUrl('assignments')}?new`;\n    addAssignmentAnchor.querySelector('.text').innerText = 'Add a new assignment';\n    assignmentsNode.appendChild(addAssignment);\n\n    const tutorialsNode = templateNode.querySelector('[data-list=\"tutorials\"]');\n    tutorials.forEach(tutorial => {\n      const node = navbarItemTemplate.cloneNode(true);\n      const anchor = node.querySelector('a');\n      anchor.href = createUrl('tutorial', tutorial.$loki);\n      anchor.innerText = tutorial.name;\n      tutorialsNode.appendChild(node);\n    });\n\n    tutorialsNode.appendChild(navbarDividerTemplate.cloneNode(true));\n\n    const addTutorial = navbarAddTemplate.cloneNode(true);\n    const addTutorialAnchor = addTutorial.querySelector('a');\n    addTutorialAnchor.href = `${createUrl('tutorials')}?new`;\n    addTutorialAnchor.querySelector('.text').innerText = 'Add a new tutorial';\n    tutorialsNode.appendChild(addTutorial);\n\n    const forumsNode = templateNode.querySelector('[data-list=\"forums\"]');\n    forums.forEach(forum => {\n      const node = navbarItemTemplate.cloneNode(true);\n      const anchor = node.querySelector('a');\n      anchor.href = createUrl('forum', forum.$loki);\n      anchor.innerText = forum.title;\n      forumsNode.appendChild(node);\n    });\n\n    this.innerHTML = '';\n    this.appendChild(templateNode);\n  }\n}\n\nwindow.customElements.define('nav-bar', NavBar);\n","/**\n * Base class for collapsible custom element. Manages the collapsed state of the inner content.\n *\n * Requires a template with the following elements:\n * - [data-element=\"inner\"] for the container that will host the hiddeable content.\n * - [data-element=\"icon-button\"] for the button that will control the collapsing/expanding.\n * - [data-element=\"opened\"] for the icon to show when expanded.\n * - [data-element=\"closed\"] for the icon to show when collapsed.\n */\nexport class Collapsible extends window.HTMLElement {\n  constructor(templateId, defaultValue = false) {\n    super();\n\n    this.contentTemplateId = templateId;\n\n    this.opened = defaultValue;\n    this.render();\n  }\n\n  toggle() {\n    this.opened = !this.opened;\n    this.update();\n  }\n\n  /**\n   * Updates the content of the collapsible content without deleting the entire HTML.\n   */\n  update() {\n    const innerNode = this.querySelector('[data-element=\"inner\"]');\n\n    if (this.opened) {\n      this.querySelector('[data-element=\"opened\"]').style.display = 'block';\n      this.querySelector('[data-element=\"closed\"]').style.display = 'none';\n      innerNode.style.transition = 'max-height 1s ease-in-out';\n      innerNode.style['max-height'] = '9000px';\n      innerNode.style['padding-bottom'] = '20px';\n    } else {\n      this.querySelector('[data-element=\"opened\"]').style.display = 'none';\n      this.querySelector('[data-element=\"closed\"]').style.display = 'block';\n      innerNode.style.transition = 'max-height 0.5s cubic-bezier(0, 1, 0, 1)';\n      innerNode.style['max-height'] = '0';\n      innerNode.style['padding-bottom'] = '0';\n    }\n  }\n\n  /**\n   * Renders the collapsible content and it's template inside of the DOM structure. Will delete all the HTML that\n   * existed in this node beforehand.\n   */\n  render() {\n    const contentTemplate = document.querySelector(this.contentTemplateId).content;\n    const contentNode = contentTemplate.cloneNode(true);\n    const innerNode = contentNode.querySelector('[data-element=\"inner\"]');\n\n    const button = contentNode.querySelector('[data-element=\"icon-button\"]');\n    button.onclick = this.toggle.bind(this);\n\n    innerNode.innerHTML = this.innerHTML;\n\n    this.innerHTML = '';\n    // Add the content from the templates\n    this.appendChild(contentNode);\n\n    // Trigger the update method\n    this.update();\n  }\n}\n","import { Collapsible } from '../base/collapsible';\n\nexport class CollapsibleMenu extends Collapsible {\n  constructor() {\n    super('#collapsible-menu');\n  }\n\n  render() {\n    super.render();\n\n    const titleNode = this.querySelector('[data-element=\"title\"]');\n    titleNode.innerText = this.getAttribute('title');\n  }\n}\n\nwindow.customElements.define('collapsible-menu', CollapsibleMenu);\n","import { databaseManager } from '../../database';\nimport { DatabaseConsumer } from '../base/databaseConsumer';\nimport { createUrl } from '../../utilities/createUrl';\n\nexport class Activities extends DatabaseConsumer(window.HTMLElement) {\n  constructor() {\n    super();\n\n    this.activitiesTemplateId = '#activities';\n  }\n\n  notified() {\n    this.render();\n  }\n\n  render() {\n    const lectures = databaseManager.getLectures();\n    const assignments = databaseManager.getTutorials();\n    const tutorials = databaseManager.getTutorials();\n    const forums = databaseManager.getForums();\n\n    const activitiesTemplate = document.querySelector(this.activitiesTemplateId).content;\n    const activitiesNode = activitiesTemplate.cloneNode(true);\n\n    const lectureTemplate = activitiesNode.querySelector('[data-element=\"single-lecture\"]').content;\n    lectures.forEach(lecture => {\n      const node = lectureTemplate.cloneNode(true);\n      const anchor = node.querySelector('[data-element=\"title\"]');\n      anchor.href = createUrl('lecture', lecture.$loki);\n      anchor.innerText = lecture.unit;\n      activitiesNode.querySelector('[data-list=\"lectures\"]').appendChild(node);\n    });\n\n    const tutorialTemplate = activitiesNode.querySelector('[data-element=\"single-tutorial\"]').content;\n    tutorials.forEach(tutorial => {\n      const node = tutorialTemplate.cloneNode(true);\n      const anchor = node.querySelector('[data-element=\"title\"]');\n      anchor.href = createUrl('tutorial', tutorial.$loki);\n      anchor.innerText = tutorial.name;\n      activitiesNode.querySelector('[data-list=\"tutorials\"]').appendChild(node);\n    });\n\n    const assignmentTemplate = activitiesNode.querySelector('[data-element=\"single-assignment\"]').content;\n    assignments.forEach(assignment => {\n      const node = assignmentTemplate.cloneNode(true);\n      const anchor = node.querySelector('[data-element=\"title\"]');\n      anchor.href = createUrl('assignment', assignment.$loki);\n      anchor.innerText = assignment.name;\n      activitiesNode.querySelector('[data-list=\"assignments\"]').appendChild(node);\n    });\n\n    const forumsTemplate = activitiesNode.querySelector('[data-element=\"single-forum\"]').content;\n    forums.forEach(forum => {\n      const node = forumsTemplate.cloneNode(true);\n      const anchor = node.querySelector('[data-element=\"title\"]');\n      anchor.href = createUrl('forum', forum.$loki);\n      anchor.innerText = forum.title;\n      node.querySelector('[data-element=\"topic-count\"]').innerText = forum.topics.length;\n      activitiesNode.querySelector('[data-list=\"forums\"]').appendChild(node);\n    });\n\n    this.innerHTML = '';\n    this.appendChild(activitiesNode);\n  }\n}\n\nwindow.customElements.define('activities-aside', Activities);\n"]}