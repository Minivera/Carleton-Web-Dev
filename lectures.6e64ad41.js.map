{"mappings":"8MAcO,MAAMA,UAAgBC,IAAAC,iBAAiBC,OAAOC,iBACnDC,cACEC,QAEAC,KAAKC,kBAAoB,kBAEzBD,KAAKE,YAAc,KAGrBC,WACEH,KAAKI,SAGPC,YAAYA,GACVL,KAAKE,YAAcG,EACnBL,KAAKI,SAGPA,SACEJ,KAAKM,UAAUC,IAAI,SACnBP,KAAKM,UAAUC,IAAI,cAEnB,IAAIF,EAAU,KACd,MAAMG,EAAQ,IAAIZ,OAAOa,IAAIb,OAAOc,SAASC,YAC7C,GAAIX,KAAKE,YACPG,EAAUL,KAAKE,gBACV,CAAA,IAAIM,EAAMI,aAAaC,IAAI,WAIhC,OAJ4C,CAC5C,MAAMC,EAAYN,EAAMI,aAAaG,IAAI,WACzCV,EAAUW,IAAAC,gBAAgBC,WAAWJ,IAKvC,IAAKT,EACH,OAGF,MACMc,EADkBC,SAASC,cAAcrB,KAAKC,mBAAmBqB,QACnCC,WAAU,GAExCC,EAAQL,EAAYE,cAAc,+BACxCG,EAAMC,KAAOC,IAAAC,UAAU,UAAWtB,EAAQuB,OAC1CJ,EAAMK,UAAYxB,EAAQyB,KAE1B,MAAMC,EAAa/B,KAAKgC,aAAa,eAChBb,EAAYE,cAAc,kCAClCY,QAAU,KACrBjB,IAAAC,gBAAgBiB,cAAc7B,GAC1B0B,IACFnC,OAAOc,SAASe,KAAOM,IAI3B,MAAMI,EAAiBhB,EAAYE,cAAc,wBAAwBC,QACrEjB,EAAQ+B,YACV/B,EAAQgC,OAAOC,QAAQC,IACrB,MAAMC,EAAOL,EAAeZ,WAAU,GACpBiB,EAAKnB,cAAc,OAC3BoB,YAAYrB,SAASsB,eAAeH,EAAMf,QACpDL,EAAYsB,YAAYD,KAI5B,MAAMG,EAAqBxB,EAAYE,cAAc,4BAA4BC,QAC7EjB,EAAQ+B,YACV/B,EAAQ+B,WAAWE,QAAQM,IACzB,MAAMJ,EAAOG,EAAmBpB,WAAU,GACxBiB,EAAKnB,cAAc,OAC3BoB,YAAYrB,SAASsB,eAAeE,EAAUpB,QACxDL,EAAYsB,YAAYD,KAI5B,MAAMK,EAAe1B,EAAYE,cAAc,sBAAsBC,QACjEjB,EAAQyC,MACVzC,EAAQyC,KAAKR,QAAQQ,IACnB,MAAMN,EAAOK,EAAatB,WAAU,GAClBiB,EAAKnB,cAAc,OAC3BoB,YAAYrB,SAASsB,eAAeI,EAAKtB,QACnDL,EAAYsB,YAAYD,KAI5BxC,KAAK+C,UAAY,GACjB/C,KAAKyC,YAAYtB,gBAIrBvB,OAAOoD,eAAeC,OAAO,iBAAkBxD,EAAS,CAAEyD,QAAS","sources":["src/wc-course-website/components/lecture/index.js"],"names":["Lecture","$d7f3e883460968146cf987de83434c3$init","DatabaseConsumer","window","HTMLDivElement","constructor","super","this","lectureTemplateId","lectureData","notified","render","lecture","classList","add","query","URL","location","toString","searchParams","has","lectureId","get","$bf50779a85efbaabc121d74c5253077$init","databaseManager","getLecture","lectureNode","document","querySelector","content","cloneNode","title","href","$b16775c2d96d9b6bd584730e846d3822$init","createUrl","$loki","innerText","unit","deletePath","getAttribute","onclick","deleteLecture","slidesTemplate","recordings","slides","forEach","slide","node","appendChild","createTextNode","recordingsTemplate","recording","codeTemplate","code","innerHTML","customElements","define","extends"],"version":3,"file":"lectures.6e64ad41.js.map","sourcesContent":["import { databaseManager } from '../../database';\nimport { DatabaseConsumer } from '../base/databaseConsumer';\nimport { createUrl } from '../../utilities/createUrl';\n\n/**\n * A component that will render a single lectures's panel. Will render the lecture passed trough properties or\n * through the `lecture` search param. All events are handled internally through the database manager.\n *\n * This element extends the base div element and will need to created as `<div is=\"single-lecture\">`\n *\n * @prop {Lecture} lecture - Write only lecture property to define which lecture to render.\n *\n * @element single-lecture\n */\nexport class Lecture extends DatabaseConsumer(window.HTMLDivElement) {\n  constructor() {\n    super();\n\n    this.lectureTemplateId = '#single-lecture';\n\n    this.lectureData = null;\n  }\n\n  notified() {\n    this.render();\n  }\n\n  set lecture(lecture) {\n    this.lectureData = lecture;\n    this.render();\n  }\n\n  render() {\n    this.classList.add('panel');\n    this.classList.add('is-primary');\n\n    let lecture = null;\n    const query = new window.URL(window.location.toString());\n    if (this.lectureData) {\n      lecture = this.lectureData;\n    } else if (query.searchParams.has('lecture')) {\n      const lectureId = query.searchParams.get('lecture');\n      lecture = databaseManager.getLecture(lectureId);\n    } else {\n      return;\n    }\n\n    if (!lecture) {\n      return;\n    }\n\n    const lectureTemplate = document.querySelector(this.lectureTemplateId).content;\n    const lectureNode = lectureTemplate.cloneNode(true);\n\n    const title = lectureNode.querySelector('[data-element=\"title-link\"]');\n    title.href = createUrl('lecture', lecture.$loki);\n    title.innerText = lecture.unit;\n\n    const deletePath = this.getAttribute('delete-path');\n    const deleteButton = lectureNode.querySelector('[data-element=\"delete-button\"]');\n    deleteButton.onclick = () => {\n      databaseManager.deleteLecture(lecture);\n      if (deletePath) {\n        window.location.href = deletePath;\n      }\n    };\n\n    const slidesTemplate = lectureNode.querySelector('[data-list=\"slides\"]').content;\n    if (lecture.recordings) {\n      lecture.slides.forEach(slide => {\n        const node = slidesTemplate.cloneNode(true);\n        const container = node.querySelector('div');\n        container.appendChild(document.createTextNode(slide.title));\n        lectureNode.appendChild(node);\n      });\n    }\n\n    const recordingsTemplate = lectureNode.querySelector('[data-list=\"recordings\"]').content;\n    if (lecture.recordings) {\n      lecture.recordings.forEach(recording => {\n        const node = recordingsTemplate.cloneNode(true);\n        const container = node.querySelector('div');\n        container.appendChild(document.createTextNode(recording.title));\n        lectureNode.appendChild(node);\n      });\n    }\n\n    const codeTemplate = lectureNode.querySelector('[data-list=\"code\"]').content;\n    if (lecture.code) {\n      lecture.code.forEach(code => {\n        const node = codeTemplate.cloneNode(true);\n        const container = node.querySelector('div');\n        container.appendChild(document.createTextNode(code.title));\n        lectureNode.appendChild(node);\n      });\n    }\n\n    this.innerHTML = '';\n    this.appendChild(lectureNode);\n  }\n}\n\nwindow.customElements.define('single-lecture', Lecture, { extends: 'div' });\n"]}